<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <snapshot/>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-24 14:47:16</sys_created_on>
        <sys_id>b0e34606db321010a2e3880948961908</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_atf_step_b0e34606db321010a2e3880948961908</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-24 14:58:13</sys_updated_on>
        <table/>
        <test display_value="Microfrontend e2e test">3be24606db321010a2e3880948961918</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=b0e34606db321010a2e3880948961908"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>b0e34606db321010a2e3880948961908</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-24 14:47:17</sys_created_on>
        <sys_id>12144646db321010a2e3880948961954</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-24 14:58:13</sys_updated_on>
        <value>// You can use this step to execute a variety of server-side javascript tests including&#13;
// jasmine tests and custom assertions&#13;
//&#13;
//&#13;
// Pass or fail a step: Override the step outcome to pass or fail. This is ignored &#13;
//                      by jasmine tests&#13;
//&#13;
//  - Return true from the main function body to pass the step&#13;
//  - Return false from the main function body to fail the step&#13;
//&#13;
//&#13;
// outputs:       Pre-defined Step config Output variables to set on this step during &#13;
//                execution that are available to later steps&#13;
//&#13;
// steps(SYS_ID): A function to retrieve Output variable data from a step that executed&#13;
//                earlier in the test. The desired step's sys_id is required&#13;
//&#13;
//  Example:&#13;
//&#13;
//      // Test step 1 - add data&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      // this sample step's Step config has Output variables named table and record_id&#13;
//      outputs.table = 'sc_task';&#13;
//      outputs.record_id = gr.insert();&#13;
//&#13;
//      // Test step 2 - access added data and validate&#13;
//      // check that the record exists (or that business logic changed it)&#13;
//      var gr = new GlideRecord("sc_task");&#13;
//      gr.get(steps(PREVIOUS_STEP_SYS_ID).record_id);&#13;
//      assertEqual({name: "task gr exists", shouldbe: true, value: gr.isValidRecord()});&#13;
//&#13;
//&#13;
// stepResult.setOutputMessage: Log a message to step results after step executes.&#13;
//                              Can only be called once or will overwrite previous &#13;
//                              message&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      gr.setValue('short_description', 'verify task can be inserted');&#13;
//      var grSysId = gr.insert();&#13;
//      var justCreatedGR = new GlideRecord('sc_task');&#13;
//      if (justCreatedGR.get(grSysId)) {&#13;
//            stepResult.setOutputMessage("Successfully inserted task record");&#13;
//            return true; // pass the step&#13;
//      } else { &#13;
//            stepResult.setOutputMessage("Failed to insert task record");&#13;
//            return false; // fail the step&#13;
//      }&#13;
//&#13;
//&#13;
// Note: describe is only supported in Global scope.&#13;
// Use 'describe' to create a suite of test scripts and 'it' to define test expectations&#13;
//&#13;
//  Example jasmine test:&#13;
//&#13;
//      describe('my suite of script tests', function() {&#13;
//            it('should meet expectations', function() {&#13;
//                  expect(true).not.toBe(false);&#13;
//            });&#13;
//      });&#13;
//      // make sure to uncomment jasmine.getEnv().execute(); outside the function body&#13;
//&#13;
//&#13;
// assertEqual: A function used to compare that assertion.shouldbe == assertion.value;&#13;
//              in case of failure it throws an Error and logs that the assertion by&#13;
//              name has failed&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var testAssertion = {&#13;
//            name: "my test assertion",&#13;
//            shouldbe: "expected value"&#13;
//            value: "actual value",&#13;
//      };&#13;
//      assertEqual(testAssertion); // throws Error, logs message to test step output&#13;
//&#13;
(function(outputs, steps, stepResult, assertEqual) {&#13;
    try { &#13;
   &#13;
		var r = new sn_ws.RESTMessageV2('x_58872_needit.Model-T Build', 'StartJob');&#13;
   &#13;
		var buildParameter = {&#13;
		 "testCaseDef": "W3sibmFtZSI6IlNob3VsZCBkaXNwbGF5IGxvZyB3aGVuIGNsaWNrIGluc2lkZSBTaW1wbGUgTWljcm9BcHAiLCJpbnB1dCI6eyJtaWNyb2FwcE5hdiI6Ikhlcm9lcyIsIm1pY3JvYXBwTG9jYXRvciI6ImZkcC1taWNyb2Zyb250ZW5kcy13cmFwcGVyIGRpdjo6c3Igc2ltcGxlLXRlc3Q6OnNyIHVsIGxpIn0sImV4cGVjdCI6eyJtaWNyb2FwcENsaWNrTWVzc2FnZSI6Ik1haW4gYXBwIHJlY2VpdmUgZXZlbnQ6e1wiZXZlbnRcIjpcImNsaWNrXCIsXCJkYXRhXCI6XCJmcm9tIFNpbXBsZSBNaWNyb0FwcFwifSJ9fSx7Im5hbWUiOiJTaG91bGQgZGlzcGxheSBsb2cgd2hlbiBjbGljayBpbnNpZGUgSGVybyBNaWNyb0FwcCIsImlucHV0Ijp7Im1pY3JvYXBwTmF2IjoiSGVyb2VzIiwibWljcm9hcHBMb2NhdG9yIjoiZmRwLW1pY3JvZnJvbnRlbmRzLXdyYXBwZXIgZGl2OjpzciBoZXJvLWxpc3Q6OnNyIHVsIGxpIn0sImV4cGVjdCI6eyJtaWNyb2FwcENsaWNrTWVzc2FnZSI6Ik1haW4gYXBwIHJlY2VpdmUgZXZlbnQ6e1wiZXZlbnRcIjpcImNsaWNrXCIsXCJkYXRhXCI6XCJmcm9tIEhFUk8gTWljcm9BcHBcIn0ifX0seyJuYW1lIjoiU2hvdWxkIGRpc3BsYXkgbG9nIHdoZW4gY2xpY2sgaW5zaWRlIENyaXNpcyBNaWNyb0FwcCIsImlucHV0Ijp7Im1pY3JvYXBwTmF2IjoiQ3Jpc2lzIENlbnRlciIsIm1pY3JvYXBwTG9jYXRvciI6ImZkcC1taWNyb2Zyb250ZW5kcy13cmFwcGVyIGRpdjo6c3IgY3JpLXNpczo6c3IgdWwgbGkifSwiZXhwZWN0Ijp7Im1pY3JvYXBwQ2xpY2tNZXNzYWdlIjoiTWFpbiBhcHAgcmVjZWl2ZSBldmVudDp7XCJldmVudFwiOlwiY2xpY2tcIixcImRhdGFcIjpcImZyb20gQ3Jpc2lzIE1pY3JvQXBwXCJ9In19LHsibmFtZSI6IlNob3VsZCBkaXNwbGF5IGxvZyB3aGVuIGNsaWNrIGluc2lkZSBWdWUgTWljcm9BcHAiLCJpbnB1dCI6eyJtaWNyb2FwcE5hdiI6IlZ1ZSBBcHAiLCJtaWNyb2FwcExvY2F0b3IiOiJmZHAtbWljcm9mcm9udGVuZHMtd3JhcHBlciBkaXY6OnNyIHZ1ZS1lbGVtZW50OjpzciB1bCBsaSJ9LCJleHBlY3QiOnsibWljcm9hcHBDbGlja01lc3NhZ2UiOiJNYWluIGFwcCByZWNlaXZlIGV2ZW50OntcImV2ZW50XCI6XCJjbGlja1wiLFwiZGF0YVwiOlwiZnJvbSBWVUUgTWljcm9BcHBcIn0ifX0seyJuYW1lIjoiU2hvdWxkIGRpc3BsYXkgbG9nIHdoZW4gY2xpY2sgaW5zaWRlIFJlYWN0IE1pY3JvQXBwIiwiaW5wdXQiOnsibWljcm9hcHBOYXYiOiJSZWFjdCBBcHAiLCJtaWNyb2FwcExvY2F0b3IiOiJmZHAtbWljcm9mcm9udGVuZHMtd3JhcHBlciBkaXY6OnNyIHJlYWN0LWVsZW1lbnQ6OnNyIHVsIGxpIn0sImV4cGVjdCI6eyJtaWNyb2FwcENsaWNrTWVzc2FnZSI6Ik1haW4gYXBwIHJlY2VpdmUgZXZlbnQ6e1wiZXZlbnRcIjpcImNsaWN0XCIsXCJkYXRhXCI6XCJmcm9tIFJFQUNUIE1pY3JvQVBQXCJ9In19XQ=="&#13;
		};&#13;
   &#13;
		r.setStringParameterNoEscape('JsonParameter', JSON.stringify(buildParameter));&#13;
		r.setStringParameterNoEscape('JobName', 'microfrontend_e2e_test');&#13;
 	&#13;
		var response = r.execute();&#13;
		var responseBody = response.getBody();&#13;
		var httpStatus = response.getStatusCode();&#13;
		outputs.status = 'success';  &#13;
	}&#13;
	catch(ex) {&#13;
		outputs.status = 'failed'; &#13;
		var message = ex.message;&#13;
		gs.error(message);&#13;
	}&#13;
&#13;
})(outputs, steps, stepResult, assertEqual);&#13;
// uncomment the next line to execute this script as a jasmine test&#13;
//jasmine.getEnv().execute();&#13;
</value>
        <variable display_value="">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>b0e34606db321010a2e3880948961908</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-24 14:47:17</sys_created_on>
        <sys_id>d6144646db321010a2e3880948961953</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-24 14:47:17</sys_updated_on>
        <value>3.1</value>
        <variable display_value="">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
</record_update>
